#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Board\r\n\ \r\n\ no\ parameters\r\n
comment1.params=deck
comment1.target=void\ fillBoard(gameUtil.Deck)
comment1.text=\r\n\ @fillBoard\r\n\ \r\n\ fills\ up\ the\ piles\ with\ the\ approriate\ amount\ of\ faceup\ and\ facedown\ cards\ as\ according\ to\ the\ game's\ rules\ upon\ start\r\n\ \r\n\ @param\ Deck\r\n
comment10.params=from\ to
comment10.target=boolean\ moveTopCard(int,\ int)
comment10.text=\r\n\ moveTopCard\r\n\ \r\n\ takes\ a\ faceup\ card\ from\ the\ top\ of\ one\ pile\ and\ moves\ it\ to\ another\ pile\r\n\ \r\n\ @param\ Card\ \ \ \ \ -\ the\ card\ being\ moved\r\n\ @param\ int\ from\ -\ the\ original\ pile\ index\ that\ we\ will\ be\ moving\ the\ card\ from\r\n\ @param\ int\ to\ \ \ -\ the\ pile\ index\ that\ we\ will\ be\ moving\ the\ card\ to\r\n
comment11.params=index
comment11.target=gameUtil.Card\ getTopCardToDisplay(int)
comment11.text=\r\n\ getTopCardToDisplay\r\n\ \r\n\ gets\ a\ top\ card\ value\ from\ an\ index's\ pile\ and\ returns\ it\r\n\ \r\n\ @param\ int\ index\ -\ the\ pile\ \#\ in\ the\ array\ list\ that\ we\ are\ going\ to\ return\ the\ top\ card\ from\r\n
comment12.params=num
comment12.target=boolean\ isPileEmpty(int)
comment12.text=\r\n\ isPileEmpty\r\n\ \r\n\ returns\ true\ if\ the\ pile's\ face\ up\ stack\ is\ empty\r\n\ \r\n\ @param\ int\ num\ -\ the\ pile\ that\ we\ are\ checking\r\n
comment13.params=i
comment13.target=gameUtil.Card\ removeTopPileCard(int)
comment13.text=\r\n\ removeTopPileCard\r\n\ \r\n\ removes\ the\ top\ card\ from\ a\ pile\r\n\ \r\n\ @param\ int\ i\ -\ the\ pile\ that\ we\ are\ removing\ the\ top\ card\ from\r\n
comment14.params=to
comment14.target=boolean\ addDealtCardToSpecificFoundation(int)
comment14.text=\r\n\ addToSpecificFoundation\r\n\ \r\n\ takes\ a\ card\ and\ adds\ it\ to\ a\ foundation\r\n\ \r\n\ @param\ Card\r\n\ @param\ int\ index\ represents\ which\ foundation\ in\ the\ array\ list\ that\ we\ will\ be\ adding\ the\ card\ to\r\n
comment15.params=index
comment15.target=gameUtil.Card\ getFoundationCardToDisplay(int)
comment15.text=\r\n\ getFoundationCardToDisplay\r\n\ \r\n\ gets\ a\ top\ card\ value\ from\ an\ index's\ foundation\ and\ returns\ it\r\n\ \r\n\ @param\ int\ index\ -\ the\ foundation\ in\ the\ array\ list\ that\ we\ are\ getting\ the\ top\ card\ from\r\n
comment16.params=num
comment16.target=boolean\ isFoundationEmpty(int)
comment16.text=\r\n\ isFoundationEmpty\r\n\ \r\n\ returns\ if\ the\ foundation\ is\ empty\ or\ not\r\n\ \r\n\ @param\ int\ num\ -\ the\ foundation\ that\ we\ are\ checking\r\n
comment17.params=i
comment17.target=gameUtil.Card\ removeTopFoundationCard(int)
comment17.text=\r\n\ removeTopFoundationCard\r\n\ \r\n\ removes\ the\ top\ card\ from\ a\ foundation\r\n\ \r\n\ @param\ int\ i\ -\ the\ foundation\ that\ we\ are\ removing\ the\ top\ card\ from\r\n
comment18.params=from\ to
comment18.target=boolean\ moveFromPileToFoundation(int,\ int)
comment18.text=\r\n\ moveFromPileToFoundation\r\n\ \r\n\ takes\ the\ top\ card\ from\ a\ nubered\ pile\ and\ moves\ it\ to\ a\ foundation\ if\ the\ rule\ is\ valid\r\n\ \r\n\ @param\ int\ from\ -\ the\ pile\ \#\ that\ we\ will\ take\ the\ card\ from\r\n\ @param\ int\ to\ \ \ -\ the\ foundation\ \#\ that\ we\ will\ add\ the\ card\ to\ \r\n
comment19.params=from\ to
comment19.target=boolean\ moveFromFoundationToPile(int,\ int)
comment19.text=\r\n\ moveFromFoundationToPile\r\n\ \r\n\ takes\ the\ top\ card\ from\ a\ nubered\ pile\ and\ moves\ it\ to\ a\ foundation\ if\ the\ rule\ is\ valid.\r\n\ used\ to\ undo\ moving\ a\ card\ from\ a\ pile\ to\ a\ foundation.\r\n\ \r\n\ @param\ int\ from\ -\ the\ foundation\ that\ we\ will\ take\ the\ card\ from\r\n\ @param\ int\ to\ \ \ -\ the\ pile\ that\ we\ will\ move\ the\ pile\ to\r\n
comment2.params=deck
comment2.target=gameUtil.Card\ dealCard(gameUtil.Deck)
comment2.text=\r\n\ dealCard\r\n\ \r\n\ deals\ a\ card\ to\ the\ board\r\n\ \r\n\ @param\ Deck\r\n
comment20.params=
comment20.target=boolean\ gameCompleted()
comment20.text=\r\n\ wonGame\r\n\ \r\n\ counts\ the\ number\ of\ finished\ foundations.\ if\ there\ are\ 4\ then\ te\ user\ wins\ the\ game\!\r\n\ \r\n\ @param\ no\ parameters\r\n
comment21.params=
comment21.target=java.util.ArrayList\ accessPList()
comment21.text=\r\n\ accessPlIST\r\n\ \r\n\ allows\ the\ array\ list\ plist\ to\ accessed\r\n\ \r\n\ @param\ no\ parameters\r\n
comment22.params=
comment22.target=java.util.ArrayList\ accessFList()
comment22.text=\r\n\ accessFlIST\r\n\ \r\n\ allows\ the\ array\ list\ fList\ to\ accessed\r\n\ \r\n\ @param\ no\ parameters\r\n
comment23.params=
comment23.target=java.lang.String\ toString()
comment3.params=
comment3.target=java.util.ArrayList\ getFList()
comment3.text=\r\n\ getFList\r\n\ \r\n\ returns\ the\ foundation\ array\ list\ so\ that\ it\ can\ be\ accessed\ through\ other\ classes\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getPList()
comment4.text=\r\n\ getPList\r\n\ \r\n\ returns\ the\ foundation\ arra\ list\ so\ that\ it\ can\ be\ accessed\ through\ other\ classes\r\n
comment5.params=
comment5.target=gameUtil.Card\ getDealtCard()
comment5.text=\r\n\ getDealtCard\r\n\ \r\n\ returns\ the\ dealt\ card\r\n\ \r\n\ @param\ none\r\n
comment6.params=card
comment6.target=void\ setDealtCardToNull(gameUtil.Card)
comment6.text=\r\n\ setDealtCardToNull\r\n\ \r\n\ sets\ the\ dealt\ card\ to\ null\r\n\ \r\n\ @param\ none\r\n
comment7.params=card
comment7.target=gameUtil.Card\ setDealtCard(gameUtil.Card)
comment7.text=\r\n\ setDealtCard\r\n\ \r\n\ sets\ the\ dealt\ card\ to\ a\ specified\ card\ calue\ that\ is\ passed\ in\r\n\ \r\n\ @param\ Card\ card\ -\ the\ value\ that\ the\ dealt\ card\ will\ have\r\n
comment8.params=deck
comment8.target=gameUtil.Card\ addDealtCardbackToDeck(gameUtil.Deck)
comment8.text=\r\n\ addDealtCardBackToDeck\r\n\r\n\ takes\ the\ currentlly\ dealt\ card\ and\ adds\ it\ back\ into\ the\ deck\r\n\ \r\n\ @param\ Deck\ deck\ -\ the\ deck\ that\ is\ passed\ in\ from\ the\ driver\r\n\r\n
comment9.params=to
comment9.target=boolean\ addDealtCardToSpecificPile(int)
comment9.text=\r\n\ addToSpecificPile\r\n\ \r\n\ takes\ a\ card\ and\ adds\ it\ to\ a\ pile\r\n\ \r\n\ @param\ int\ index\ represents\ which\ pile\ in\ the\ array\ list\ that\ we\ will\ be\ adding\ the\ card\ to\r\n
numComments=24
